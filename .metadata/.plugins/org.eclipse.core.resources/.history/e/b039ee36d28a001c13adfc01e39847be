/*
 * serial.c
 *
 *  Created on: 10 Feb 2022
 *      Author: stein
 */

#include <avr/io.h>
#include <avr/interrupt.h>

#include "serial.h"
#include "delay.h"


#define BUAD 9600
#define BRC ((F_CPU/16/BUAD)-1)
char servoduty1;
char servoduty2;
char dccommand;


void Init_Uart(){

	//baudrate = 57600
	UBRR0H=(BRC>>8);
	UBRR0L= BRC;

	UCSR0B= (1<<RXEN0)| (1<<RXCIE0)|(1<<TXEN0)|(1<<TXCIE0);
	//UCSR0C=(1<<USBS0)|(3<<UCSZ00) ;
    UCSR0C =
        /* no parity bit */
        (0 << UPM01) |
        (0 << UPM00) |
        /* asyncrounous USART */
        (0 << UMSEL01) |
        (0 << UMSEL00) |
        /* one stop bit */
        (0 << USBS0) |
        /* 8-bits of data */
        (1 << UCSZ01) |
        (1 << UCSZ00);
	UDR0='a';
}


void setservocycle(char data){
	if((data &= 0x40) == 0x40){
		if((data<=0x32)&&(data>=0)){
		servoduty1=(data &= 0x3F);}
		else{

			servoduty1=0x32;
		}
	}
	if((data<=0x32)&&(data>=0)){
			servoduty2=(data &= 0x3F);}
			else{

				servoduty2=0x32;
			}
}

void setdccommand(char command){
	dccommand= command;
}

/*
ISR(USART_RX_vect){
	char cRx;
	cRx=UDR0;
	UDR0=cRx; //echo the signal back
	if(cRx &= 0x80 == 0x80){
		setservocycle(cRx);
	}
	else {
		setdccommand(cRx);
	}
}
 */
